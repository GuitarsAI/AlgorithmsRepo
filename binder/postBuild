npm install -g ijavascript
ijsinstall

mkdir java

#Install OpenCV
cd ~/Cpp
tar -xvzf 'OpenCV 4.0.0-alpha.tar.gz' 
cd opencv-opencv-e7c915a
cmake -D BUILD_TIFF=ON -D WITH_CUDA=OFF -D ENABLE_AVX=OFF -D WITH_OPENGL=OFF -D WITH_OPENCL=OFF -D WITH_IPP=OFF -D WITH_TBB=ON -D BUILD_TBB=ON -D WITH_EIGEN=OFF -D WITH_V4L=OFF -D WITH_VTK=OFF -D BUILD_TESTS=OFF -D BUILD_PERF_TESTS=OFF -D CMAKE_BUILD_TYPE=RELEASE -D CMAKE_INSTALL_PREFIX=/usr/local 
make -j4
make install
ldconfig
exit
cd ~/Cpp
rm -rf opencv-opencv-e7c915a

cd ~/
npm install plotly-notebook-js

cd aux
git clone https://github.com/notablemind/jupyter-nodejs.git
cd jupyter-nodejs
mkdir -p ~/.ipython/kernels/nodejs/
npm install && node install.js
npm run build
npm run build-ext

cd ~/aux
mkdir temp_for_zip_extract
unzip ijava-1.2.0.zip -d temp_for_zip_extract
cd temp_for_zip_extract
python3 install.py --sys-prefix --param classpath:~/home/java
cd ~/aux
rm -rf temp_for_zip_extract

cd ~/
python -m bash_kernel.install

python -m sos_notebook.install

jupyter contrib nbextension install --user
jupyter-nbextension install rise --py --sys-prefix --param classpath:/home/feraubuntu/java/


# run matplotlib once to generate the font cache
python -c "import matplotlib as mpl; mpl.use('Agg'); import pylab as plt; fig, ax = plt.subplots(); fig.savefig('test.png')"
	
test -e test.png && rm test.png

jupyter kernelgateway --generate-config

unzip ~/aux/ngrok-stable-linux-amd64.zip > /dev/null 2>&1

jupyter trust *.ipynb

